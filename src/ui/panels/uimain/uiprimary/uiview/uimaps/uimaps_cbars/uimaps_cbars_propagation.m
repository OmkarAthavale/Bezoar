classdef uimaps_cbars_propagation < TComponent
    properties (Constant)
        Type = "axes"
    end
    properties (SetAccess = immutable)
        im
        tx_min; tx_max; tx_label; tx_highlight
        ln
        cm
    end

    methods
        function updateuimaps_highlight(obj)
            t = obj.Data.uimaps_highlight.time;
            b = obj.Handle.Parent.BackgroundColor;

            if isfinite(t)
                y = (t/obj.Data.uimaps_settings.interval);

                set(obj.tx_highlight, ...
                    "String", string(round(t, 1)), ...
                    "Position", [1.2 y] + 0.5, ...
                    "BackgroundColor", [b 0.9], ...
                    "Margin", 1)
                set(obj.tx_label, ...
                    "Color", [224 224 224]/256)
                set(obj.ln, ...
                    "XData", [0 1] + 0.5, ...
                    "YData", [y y] + 0.5)
            else
                set(obj.tx_highlight, ...
                    "String", "")
                set(obj.tx_label, ...
                    "Color", [128 128 128]/256)
                set(obj.ln, ...
                    "XData", [], ...
                    "YData", [] + 0.5)
            end
        end
        function updateuimaps_settings(obj)
            cmap = obj.Data.uimaps_settings.cmap_at;
            i = obj.Data.uimaps_settings.interval;
            n = size(cmap, 1);

            set(obj.Handle, ...
                "YLim", [0 n] + 0.5, ...
                "XLim", [0 4] + 0.5, ...
                "Colormap", cmap, ...
                "Visible", "off")
            set(obj.im, ...
                "CData", (1:n)')
            set(obj.tx_min, ...
                "String", string(0), ...
                "Position", [1.2 0] + 0.5)
            set(obj.tx_max, ...
                "String", string(n * i), ...
                "Position", [1.2 n] + 0.5)
            set(obj.tx_label, ...
                "Rotation", -90, ...
                "Position", [1.2 n/2] + 0.5)            
        end
    end
    methods (Access = protected)
        function mouseAxesClickRight(obj)
            set(obj.cm, ...
                "Position", get(obj.Window, "CurrentPoint"), ...
                "Visible", "on")
        end
    end
    methods (Access = private)
        function menuFcn(obj, e)
            switch e.Source.Text
                case "0.25 s"
                    obj.Data.uimaps_settings.setInterval(0.25)
                case "0.5 s"
                    obj.Data.uimaps_settings.setInterval(0.5)
                case "1 s"
                    obj.Data.uimaps_settings.setInterval(1)
                case "2 s"
                    obj.Data.uimaps_settings.setInterval(2)
                case "5 s"
                    obj.Data.uimaps_settings.setInterval(5)
                otherwise 
                    return
            end
            set(e.Source.Parent.Children, ...
                "Checked", "off")
            set(e.Source, ...
                "Checked", "on")
        end
    end
    methods % CONSTRUCTOR
        function obj = uimaps_cbars_propagation()
            set(obj.Handle, ...
                ... Ticks
                'XTick', [], ...
                'YTick', [], ...
                ... Rulers
                'XLim', [0 4] + 0.5, ...
                'YLim', [0 1], ...
                'YDir', 'reverse', ...
                ... Colour
                'Color', 'w', ...
                ... Position
                'Units', 'normalized', ...
                'InnerPosition', [0.01 0.01 0.98 0.98], ...
                ... Interactivity
                'Visible', 'off', ...
                ... Callback Execution Control
                'PickableParts', 'all')

            obj.im = image(obj.Handle, ...
                ... Image Data and Quality
                "CData", [], ...
                "CDataMapping", "direct");
            obj.tx_min = text(obj.Handle, 0, 0, "", ...
                ... Text
                "Color", "k", ...
                ... Font
                "FontName", "fixedwidth", ...
                "FontWeight", "bold", ...
                "FontSize", 8, ...
                ... Text Box
                "Rotation", 0, ...
                "HorizontalAlignment", "left", ...
                "VerticalAlignment", "cap");
            obj.tx_max = text(obj.Handle, 0, 0, "", ...
                ... Text
                "Color", "k", ...
                ... Font
                "FontName", "fixedwidth", ...
                "FontWeight", "bold", ...
                "FontSize", 8, ...
                ... Text Box
                "Rotation", 0, ...
                "HorizontalAlignment", "left", ...
                "VerticalAlignment", "baseline");
            obj.tx_label = text(obj.Handle, ...
                1.7, 0.5, "Time delay (Î”s)", ...
                ... Text
                "Color", [128 128 128]/256, ...
                ... Font
                "FontName", "fixedwidth", ...
                "FontWeight", "bold", ...
                "FontSize", 10, ...
                ... Text Box
                "Rotation", -90, ...
                "HorizontalAlignment", "center", ...
                "VerticalAlignment", "bottom");

            obj.ln = line(obj.Handle, ...
                ... Data
                'XData', double.empty(1,0), ...
                'YData', double.empty(1,0));
            obj.tx_highlight = text(obj.Handle, 0, 0, "", ...
                ... Text
                "Color", "k", ...
                ... Text Box
                "BackgroundColor", [obj.Handle.Parent.BackgroundColor 0.9], ...
                "Margin", 1, ...
                ... Font
                "FontName", "fixedwidth", ...
                "FontWeight", "bold", ...
                "FontSize", 8, ...
                ... Text Box
                "Rotation", 0, ...
                "HorizontalAlignment", "left", ...
                "VerticalAlignment", "middle");

            set(allchild(obj.Handle), "HitTest", "off")

            obj.cm = uicontextmenu(obj.Window);
            ti = uimenu(obj.cm, ...
                "Text", "Interval");
            uimenu(ti, ...
                "Text", "0.25 s");
            uimenu(ti, ...
                "Text", "0.5 s");
            uimenu(ti, ...
                "Text", "1 s");
            uimenu(ti, ...
                "Text", "2 s", ...
                "Checked", "on");
            uimenu(ti, ...
                "Text", "5 s", ...
                "Checked", "on");

            obj.addlistener(findobj(obj.cm, "Children", gobjects(0)), ...
                "Action", @(~, e) obj.menuFcn(e))
        end
    end     % CONSTRUCTOR
end