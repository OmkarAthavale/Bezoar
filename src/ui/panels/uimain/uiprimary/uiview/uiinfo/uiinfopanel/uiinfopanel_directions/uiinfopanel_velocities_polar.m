classdef uiinfopanel_velocities_polar < TComponent
    properties (Constant)
        Type = 'uipanel'
    end
    properties
        pax; ax
        pa_all; pa_select;
    end

    methods 
        function updateuiinfo_velocities(obj)
            e = linspace(0, 2*pi, 13);
            
            b = obj.Data.uiinfo_velocities.directions;
            b = wrapTo2Pi(b + pi/12);

            ac = histcounts(b, e);
            ac = ac./max(ac);

            set(obj.pa_all, ...
                'XData', ac([1:end, 1]).*sin(e), ...
                'YData', ac([1:end, 1]).*cos(e))
            set(obj.pax, ...
                'RLim', [0 1], ...
                'RTick', [])
        end
        function updateuiinfo_selection(obj)
            s = obj.Data.uiinfo_selection.staggered;
            if any(s, "all")
                e = linspace(0, 2*pi, 13);

                b = obj.Data.uiinfo_velocities.directions;
                b = wrapTo2Pi(b + pi/12);

                ac = histcounts(b, e);
                sc = histcounts(b(s), e);
                sc = sc./max(ac);

                set(obj.pa_select, ...
                    'XData', sc([1:end, 1]).*sin(e), ...
                    'YData', sc([1:end, 1]).*cos(e))
                set(obj.pa_all, ...
                    'FaceAlpha', 0.3)
            else
                set(obj.pa_select, ...
                    'XData', [], ...
                    'YData', [])
                set(obj.pa_all, ...
                    'FaceAlpha', 0.7)
            end
        end
    end
    methods % CONSTRUCTOR
        function obj = uiinfopanel_velocities_polar()
            set(obj.Handle, ...
                'BackgroundColor', [128 128 128]/256);

            obj.pax = polaraxes(obj.Handle, ...
                ... Font
                'FontName', 'FixedWidth', ...
                'FontSize', 6, ...
                'FontWeight', 'bold', ...
                ... Tick
                'RTickLabel', {}, ...
                'ThetaTickLabel',  strcat(num2str((0:30:330)'), 'Â°'), ...
                'ThetaZeroLocation', 'top', ...
                'ThetaDir', 'clockwise', ...
                ... Rulers
                'RLim', [0 1], ...
                'ThetaColor', [0.9 0.9 0.9], ...
                ... Grid Lines
                'GridColor', [0.8 0.8 0.8], ...
                ... Box Styling
                'Color', [0.5 0.5 0.5], ...
                ... Position
                'Position', [0.1 0.1 0.8 0.8], ...
                'PositionConstraint', 'innerposition');
            obj.ax = axes(obj.Handle, ...
                ... Rules
                'XLim', [-1 1], ...
                'YLim', [-1 1], ...
                ... Position
                'Position', [0.1 0.1 0.8 0.8], ...
                'PositionConstraint', 'innerposition', ...
                'DataAspectRatio', [1 1 1], ...
                ... Interactivity
                'Visible', 'off');
            obj.pa_all = patch(obj.ax, ...
                ... Color and Styling
                'FaceColor', 'w', ...
                'FaceAlpha', 0.3, ...
                'EdgeColor', 'none', ...
                'LineStyle', 'none', ...
                ... Data
                'XData', [], ...
                'YData', [], ...
                'ZData', [], ...
                ... Callback Execution Control
                'PickableParts', 'none');
            obj.pa_select = patch(obj.ax, ...
                ... Color and Styling
                'FaceColor', 'w', ...
                'FaceAlpha', 1.0, ...
                'EdgeColor', 'none', ...
                'LineStyle', 'none', ...
                ... Data
                'XData', [], ...
                'YData', [], ...
                'ZData', [], ...
                ... Callback Execution Control
                'PickableParts', 'none');
        end
    end     % CONSTRUCTOR
    methods (Access = protected)
        function initialise(obj)
            obj.Height = 140;
        end
    end     % INITIALISE
end